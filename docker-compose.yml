name: boostly-backend

services:
  app:
    build: .
    image: boostly-backend-image
    container_name: boostly-backend-django
    command: /app/entrypoint.sh
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres
    container_name: boostly-backend-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: boostlyDB
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data

  ngrok:
    image: ngrok/ngrok
    container_name: boostly-backend-ngrok
    env_file:
      - .env
    command: http backend:8000
    depends_on:
      - app

  redis:
    image: redis:alpine
    container_name: boostly-backend-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery:
    image: boostly-backend-image
    container_name: boostly-backend-celery
    command: celery -A boostly_backend worker -E -l info
    volumes:
      - .:/app
    depends_on:
      - app
      - postgres
      - redis

  flower:
    image: boostly-backend-image
    container_name: boostly-backend-flower
    command: celery -A boostly_backend flower --address=0.0.0.0 --port=5555
    ports:
      - "5556:5555"
    depends_on:
      - redis

  beat:
    image: boostly-backend-image
    container_name: boostly-backend-beat
    command: celery -A boostly_backend beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    depends_on:
      - app
      - redis

volumes:
  postgres_data:
  redis_data: